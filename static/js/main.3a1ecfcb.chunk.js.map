{"version":3,"sources":["components/StarWarsCard/index.js","components/Wrapper/index.js","components/Title/index.js","App.js","index.js"],"names":["FriendCard","props","react_default","a","createElement","className","onClick","imageFunction","id","alt","name","src","image","Wrapper","children","Title","App","state","friendAndFoe","score","remaining","length","selections","status","ShuffleCharacters","shuffleArray","_this","map","Math","random","sort","b","setState","handleIncrement","handleImageClick","console","log","indexOf","imageArray","push","_this2","this","components_Title","components_Wrapper","theForce","StarWarsCard","key","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"i/BAceA,MAXf,SAAoBC,GAClB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOC,QAAS,kBAAML,EAAMM,cAAcN,EAAMO,MAE7DN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKK,IAAKR,EAAMS,KAAMC,IAAKV,EAAMW,iBCD1BC,MAJf,SAAiBZ,GACf,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWJ,EAAMa,iBCc1BC,MAbf,WACE,OACEb,EAAAC,EAAAC,cAAA,WAGAF,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,mECuEWY,6MA1EbC,MAAQ,CACNC,eAEAC,MAAO,EACPC,UAAWF,EAAaG,OACxBC,WAAY,GACZC,OAAQ,MAIVC,kBAAoB,WAClB,IAAMC,EAAeC,EAAKT,MAAMC,aAC7BS,IAAI,SAAAxB,GAAC,MAAI,CAACyB,KAAKC,SAAU1B,KACzB2B,KAAK,SAAC3B,EAAG4B,GAAJ,OAAU5B,EAAE,GAAK4B,EAAE,KACxBJ,IAAI,SAAAxB,GAAC,OAAIA,EAAE,KACduB,EAAKM,SAAS,CAAEd,aAAcO,OAIhCQ,gBAAkB,WAEhBP,EAAKM,SAAS,CAAEb,MAAOO,EAAKT,MAAME,MAAQ,IAC1CO,EAAKM,SAAS,CAAEZ,UAAWM,EAAKT,MAAMG,UAAY,OAIpDc,iBAAmB,SAAA1B,GAKjB,GAJA2B,QAAQC,IAAI5B,IAI+B,IAAvCkB,EAAKT,MAAMK,WAAWe,QAAQ7B,GAAY,CAC5CkB,EAAKM,SAAS,CAAET,OAAQ,0BACxBG,EAAKF,oBACLE,EAAKO,kBACL,IAAIK,EAAaZ,EAAKT,MAAMK,WAC5BgB,EAAWC,KAAK/B,GAChB2B,QAAQC,IAAI,eAAgBE,EAAYA,EAAWjB,QAE9CiB,EAAWjB,SAAUH,EAAaG,SACnCc,QAAQC,IAAI,mBACZV,EAAKM,SAAS,CAACT,OAAQ,sBAAuBD,WAAY,GAAIH,MAAO,EAAGC,UAAWF,EAAaG,eAIpGK,EAAKM,SAAS,CAAET,OAAQ,4BAA6BD,WAAY,GAAIF,UAAWF,EAAaG,OAAQF,MAAO,6EAMvG,IAAAqB,EAAAC,KACP,OACEvC,EAAAC,EAAAC,cAAA,OAAKC,UAAY,OACfH,EAAAC,EAAAC,cAACsC,EAAD,MACAxC,EAAAC,EAAAC,cAAA,UAAKqC,KAAKxB,MAAME,MAAhB,aAAiCsB,KAAKxB,MAAMG,UAA5C,cAEAlB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAQoC,KAAKxB,MAAMM,QAChCrB,EAAAC,EAAAC,cAACuC,EAAD,KACGF,KAAKxB,MAAMC,aAAaS,IAAI,SAAAiB,GAAQ,OACnC1C,EAAAC,EAAAC,cAACyC,EAAD,CACEtC,cAAeiC,EAAKN,iBACpB1B,GAAIoC,EAASpC,GACbsC,IAAKF,EAASpC,GACdE,KAAMkC,EAASlC,KACfE,MAAOgC,EAAShC,mBAnEZmC,mBCDlBC,IAASC,OAAO/C,EAAAC,EAAAC,cAAC8C,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.3a1ecfcb.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction FriendCard(props) {\r\n  return (\r\n    <div className=\"card\" onClick={() => props.imageFunction(props.id)}>\r\n      \r\n      <div className=\"img-container\">\r\n        <img alt={props.name} src={props.image} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FriendCard;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Wrapper(props) {\r\n  return <div className=\"wrapper\">{props.children}</div>;\r\n}\r\n\r\nexport default Wrapper;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\n\r\n\r\nfunction Title(){\r\n  return(\r\n    <div>\r\n\r\n\r\n    <h1>Test your Memory!</h1>\r\n    <h3>Don't click on the same photo more than once</h3>\r\n    </div>\r\n    )\r\n  \r\n}\r\n\r\n\r\nexport default Title;\r\n","import React, { Component } from \"react\";\r\nimport StarWarsCard from \"./components/StarWarsCard\";\r\nimport Wrapper from \"./components/Wrapper\";\r\nimport Title from \"./components/Title\";\r\nimport friendAndFoe from \"./friendAndFoe.json\";\r\n\r\nclass App extends Component {\r\n  // Setting this.state.friendAndFoe to the friendAndFoe json array\r\n  state = {\r\n    friendAndFoe,\r\n    // score: friendAndFoe.length,\r\n    score: 0,\r\n    remaining: friendAndFoe.length,\r\n    selections: [],\r\n    status: \"\"\r\n  };\r\n\r\n  // shuffle code inspired by @BetonMAN\r\n  ShuffleCharacters = () => {\r\n    const shuffleArray = this.state.friendAndFoe\r\n      .map(a => [Math.random(), a])\r\n      .sort((a, b) => a[0] - b[0])\r\n      .map(a => a[1]);\r\n    this.setState({ friendAndFoe: shuffleArray });\r\n  };\r\n\r\n  // handleIncrement increases this.state.count by 1\r\n  handleIncrement = () => {\r\n    // We always use the setState method to update a component's state\r\n    this.setState({ score: this.state.score + 1 });\r\n    this.setState({ remaining: this.state.remaining - 1 });\r\n  };\r\n\r\n  // check image\r\n  handleImageClick = id => {\r\n    console.log(id);\r\n    // create array variable\r\n\r\n    // check existing array for id to see if it is listed\r\n    if (this.state.selections.indexOf(id) === -1) {\r\n      this.setState({ status: \"You guessed correctly\" });\r\n      this.ShuffleCharacters();\r\n      this.handleIncrement();\r\n      var imageArray = this.state.selections;\r\n      imageArray.push(id);\r\n      console.log(\"imageArray: \", imageArray, imageArray.length);\r\n\r\n        if(imageArray.length=== friendAndFoe.length){\r\n          console.log(\"the length is 2\")\r\n          this.setState({status: \"You Win! Play Again\", selections: [], score: 0, remaining: friendAndFoe.length});\r\n\r\n        }\r\n    } else {\r\n      this.setState({ status: \"Already Chosen. Game Over\", selections: [], remaining: friendAndFoe.length, score: 0 });\r\n    }\r\n  };\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className = \"top\">\r\n        <Title />\r\n        <h3>{this.state.score} Selected {this.state.remaining} Remaining</h3>\r\n\r\n        <p className=\"lead\">{this.state.status}</p>\r\n        <Wrapper>\r\n          {this.state.friendAndFoe.map(theForce => (\r\n            <StarWarsCard\r\n              imageFunction={this.handleImageClick}\r\n              id={theForce.id}\r\n              key={theForce.id}\r\n              name={theForce.name}\r\n              image={theForce.image}\r\n            />\r\n          ))}\r\n        </Wrapper>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n"],"sourceRoot":""}